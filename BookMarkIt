#!/usr/bin/env bash
## BookMarkIt
## options
## add [url] [key]   Add a new URL to bookmarks with a given key. The "key" will be requested if not
##                   provided, the URL instead will be taken from the clipboard if not provided.
## find [query]      Find a URL from the bookmarks. You can provide an initial query string to limit
##                   the search

BOOKMARKS="$HOME/Documents/bookmarks.yml"

action=${1:-'find'}


if command -v notify-send >/dev/null; then
    NOTIFY="notify-send --app-name BookMarkIt -i dialog-information"
else
    NOTIFY="echo"
fi

add_new_bookmark() {
    local url=$1
    shift
    local key=$*

    if [[ -z $url ]]; then
        url=$(wl-paste)
    fi

    if [[ ! $url =~ "http"  ]]; then
        return 1
    fi

    exists_already=$(yq '.bookmarks[].link' "${BOOKMARKS}" | grep "$url" -c)
    if [[ $exists_already -gt 0 ]]; then
        $NOTIFY "This URL was already bookmarked"
        return 1
    fi

    if [[ -z $key ]]; then
        if ! key=`kdialog --title BookMarkIt --inputbox "Give a name to the URL"`; then
            exit 0
        fi
    fi

    # replace spaces with underscore for the key
    key="${key// /_}"

    title=$(wget -q -O - "$url" | tr "\n" " " | sed 's|.*<title>\([^<]*\).*</head>.*|\1|;s|^\s*||;s|\s*$||')
    yq --inplace ".bookmarks += [{\"key\": \"${key}\", \"link\": \"${url}\"}]" "${BOOKMARKS}"
    $NOTIFY "$key stored in Bookmark"
    return 0
}

find_bookmark() {
    QUERY="--query=$@"
    selection=$(\
        yq 'with(.bookmarks[]; .key = .key + " => " + .link)' "${BOOKMARKS}" \
        | yq '[ .bookmarks[].key]' \
        | column -t -s ' ' \
        | sort \
        | fzf \
            --prompt "Search bookmark > " \
            --layout reverse --height=70% $QUERY\
            --bind 'ctrl-y:execute(readlink -f {} | echo {} | cut -d">" -f2 | tr -d " " | tr -d "\n" | xclip -selection clipboard)+abort'\
    )
    if [[ -z ${selection} ]]; then
        exit 0
    fi
    link=$(echo "${selection}" | awk '{print $4}')
    xdg-open ${link} 2>&1 > /dev/null
}

if [[ $action == "add" ]]; then
    shift
    add_new_bookmark $*
    exit $?
fi

if [ $action == "find" ]; then
    find_bookmark $2
    exit $?
fi

echo "[!] unsupported action \"$action\""
exit 1
