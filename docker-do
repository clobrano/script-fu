#!/usr/bin/env bash
# -*- coding: UTF-8 -*-
## Helper script for docker based build machines. The $HOME/workspace is mounted on docker machine under the same path
## (that must have been created first when building the docker image) and the CURRENT directory becomes the WORKING
## directory inside docker.
## usage: docker-do.sh [options]
## options:
##      -i <docker_image>   The docker image to use
##      -c <command>        Command to execute in docker env. Some commands are extended (see "Extended commands" paragraph below)
##      -v <version>        Checkinstall's package version [default: 0]
##      -b <backup>         Checkinstall's backup flag [default: no]
##      -r                  Static code review during build using scan-build
##      -d                  Dry-run
##
## Extended command -> added flags:
##   - checkinstall -> --backup=<configurable> --pgkversion=<configurable> -y
##   - jekyll       -> --volume="$PWD:/srv/jekyll" jekyll build (depends on docker image jekyll/jekyll)

# Default values
_version=0
_backup=no

# No-arguments is not allowed
[ $# -eq 0 ] && sed -ne 's/^## \(.*\)/\1/p' $0 && exit 1

# Parsing flags and arguments
while getopts 'hi:c:v:b:rd' OPT; do
    case $OPT in
        h)
            sed -ne 's/^## \(.*\)/\1/p' $0
            exit 1
            ;;
        i)
            _docker_image=$OPTARG
            ;;
        c)
            _command=$OPTARG
            ;;
        v)
            _version=$OPTARG
            ;;
        b)
            _backup=$OPTARG
            ;;
        r)
            _r=1
            ;;
        d)
            _d=1
            ;;
        \?)
            echo "---"
            sed -ne 's/^## \(.*\)/\1/p' $0
            exit 1
            ;;
    esac
done

# Default flags
VOLUME="--volume=$HOME/workspace:$HOME/workspace"
WORKDIR="--workdir=$PWD"


if [ -z "$_docker_image" ]; then
    cur=`pwd`
    _docker_image=`basename $cur`
    echo $_docker_image
fi

if [ ! -z "$_r" ] && [ "$_command" == "make" ]; then
    _command="scan-build make"
fi

if [ "$_command" == "checkinstall" ]; then
    _command="checkinstall --backup=$_backup --pkgversion=$_version -y"
fi

if [ "$_command" == "jekyll" ]; then
    export JEKYLL_VERSION=3.5
    VOLUME=--volume="$PWD:/srv/jekyll"

    _docker_image="jekyll/jekyll:$JEKYLL_VERSION"
    _command="jekyll build"
fi

set -x
docker run --rm "$VOLUME" "$WORKDIR" -it "$_docker_image" "$_command"

