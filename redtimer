#!/usr/bin/env bash
# -*- coding: UTF-8 -*-
## Simple interface to `at` to allow the usage as a pomodoro timer.
## usage:
##    redtimer help           Show this message
##    redtimer work           Start work session
##    redtimer pause          Take a break
##    redtimer alt            Stop redtimer
##    redtimer log [search]   Show redtimer log, eventually filtered by search term
##    redtimer                Show running redtimer

# environment variables
_work_session_time=${REDTIMER_WORK_SESSION_TIME:-25}
_pause_session_time=${REDTIMER_PAUSE_SESSION_TIME:-5}
_log_session_path=${REDTIMER_LOG_SESSION_PATH:-~/Dropbox/Work/sideproject/redtimer-session-log.txt}


# functions
function help() {
    cat -v $0 | grep -e "^##"
}

function work() {
    session_start_time=`LC_ALL=en_US.utf8 date +"%a %b %d %H:%M:%S %Y"`
    msg="notify-send -i time -c urgent 'work session ended' && echo work completed, $session_start_time + $_work_session_time min >> $_log_session_path && rm -f /tmp/redtimer-work-job"
    job_id=`echo "$msg" | at now + $_work_session_time min 2>&1 >/dev/null | grep job | cut -d" " -f2`
    echo "$job_id" > /tmp/redtimer-work-job
    status
}

function pause() {
    msg="notify-send -i time -c urgent 'pause ended' && rm -f /tmp/redtimer-pause-job"
    job_id=`echo "$msg" | at now + $_pause_session_time min 2>&1 >/dev/null | grep job | cut -d" " -f2`
    echo "$job_id" > /tmp/redtimer-pause-job
    status
}

function alt() {
    msg=""
    [ -f /tmp/redtimer-work-job ]  && msg+="work"  && job_id=`cat -v /tmp/redtimer-work-job`  && rm /tmp/redtimer-work-job
    [ -f /tmp/redtimer-pause-job ] && msg+="pause" && job_id=`cat -v /tmp/redtimer-pause-job` && rm /tmp/redtimer-pause-job
    [ ! -z $job_id ] && atrm $job_id && echo "+ $msg session stopped" && return
    echo "+ no redtimer found"
}

function status() {
    msg=""
    [ -f /tmp/redtimer-work-job ] && msg+="$_work_session_time min work" && job_id=`cat -v /tmp/redtimer-work-job`
    [ -f /tmp/redtimer-pause-job ] && msg+="$_pause_session_time min pause" && job_id=`cat -v /tmp/redtimer-pause-job`

    [ ! -z $job_id ] && end_time=`atq | grep $job_id | cut -d" " -f2,3,4,5`
    [ "$end_time" = "" ] && echo "+ no redtimer running"
    [ ! "$end_time" = "" ] && echo "+ $msg session will end at $end_time"
}

function log() {
    search="$@"
    [ ! -f  "$_log_session_path" ] && touch "$_log_session_path"
    if [ "$search" = "" ]; then
        echo "showing full redtimer log history"
        cat -v "$_log_session_path"
        n=`cat -v "$_log_session_path" | wc -l`
        echo "$n session(s) completed"
    else
        echo "showing \"$search\" in redtimer history"
        cat -v "$_log_session_path" | grep "$search"
        n=`cat -v "$_log_session_path" | grep "$search" | wc -l`
        echo "$n session(s) completed"
    fi
}

# main
set -e
cmd=$1
[ "$cmd" = "" ] && status && echo "- run 'redtimer help' for usage -" && exit 0
case $cmd in
    "work") work;;
    "pause") pause;;
    "alt") alt;;
    "log") log ${@:2};;
    "help") help;;
    "status") status;;
    *) echo "- run 'redtimer help' for usage -";;
esac


